// <auto-generated />
using System;
using BibliotecaSUPABASE.Banco.Conexao;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BibliotecaSUPABASE.Migrations
{
    [DbContext(typeof(ConexaoContexto))]
    [Migration("20250620040533_emailUNICO")]
    partial class emailUNICO
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BibliotecaSUPABASE.Banco.Modelos.Tarefa", b =>
                {
                    b.Property<string>("IdTarefa")
                        .HasColumnType("text");

                    b.Property<string>("ConteudoTarefa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("DataCriacaoTarefa")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UsuarioId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdTarefa");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("BibliotecaSUPABASE.Banco.Modelos.Usuario", b =>
                {
                    b.Property<string>("UsuarioId")
                        .HasColumnType("text");

                    b.Property<string>("EmailUsuario")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("ImagemUsuario")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("NomeUsuario")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("SenhaUsuario")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("EmailUsuario")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BibliotecaSUPABASE.Banco.Modelos.Tarefa", b =>
                {
                    b.HasOne("BibliotecaSUPABASE.Banco.Modelos.Usuario", "UsuarioAssociado")
                        .WithMany("Tarefas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UsuarioAssociado");
                });

            modelBuilder.Entity("BibliotecaSUPABASE.Banco.Modelos.Usuario", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
